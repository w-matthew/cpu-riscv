#! /usr/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2009.vpi";
S_0x5e485d1fc3d0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x5e485d1fc560 .scope module, "alu_tb" "alu_tb" 3 3;
 .timescale 0 0;
v0x5e485d2e03d0_0 .var "a", 31 0;
v0x5e485d2e04b0_0 .var/i "add_fail", 31 0;
v0x5e485d2e0570_0 .var/i "add_pass", 31 0;
v0x5e485d2e0660_0 .var/i "and_fail", 31 0;
v0x5e485d2e0740_0 .var/i "and_pass", 31 0;
v0x5e485d2e0870_0 .var "b", 31 0;
v0x5e485d2e0930_0 .var/i "or_fail", 31 0;
v0x5e485d2e09f0_0 .var/i "or_pass", 31 0;
v0x5e485d2e0ad0_0 .net "out", 31 0, v0x5e485d2e0150_0;  1 drivers
v0x5e485d2e0bc0_0 .var "sel", 3 0;
v0x5e485d2e0c90_0 .var/i "sll_fail", 31 0;
v0x5e485d2e0d50_0 .var/i "sll_pass", 31 0;
v0x5e485d2e0e30_0 .var/i "slt_fail", 31 0;
v0x5e485d2e0f10_0 .var/i "slt_pass", 31 0;
v0x5e485d2e0ff0_0 .var/i "sltu_fail", 31 0;
v0x5e485d2e10d0_0 .var/i "sltu_pass", 31 0;
v0x5e485d2e11b0_0 .var/i "sra_fail", 31 0;
v0x5e485d2e1290_0 .var/i "sra_pass", 31 0;
v0x5e485d2e1370_0 .var/i "srl_fail", 31 0;
v0x5e485d2e1450_0 .var/i "srl_pass", 31 0;
v0x5e485d2e1530_0 .var/i "sub_fail", 31 0;
v0x5e485d2e1610_0 .var/i "sub_pass", 31 0;
v0x5e485d2e16f0_0 .var/i "total_fail", 31 0;
v0x5e485d2e17d0_0 .var/i "total_pass", 31 0;
v0x5e485d2e18b0_0 .var/i "xor_fail", 31 0;
v0x5e485d2e1990_0 .var/i "xor_pass", 31 0;
S_0x5e485d1bf490 .scope module, "DUT" "alu" 3 11, 4 3 0, S_0x5e485d1fc560;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "a";
    .port_info 1 /INPUT 32 "b";
    .port_info 2 /INPUT 4 "sel";
    .port_info 3 /OUTPUT 32 "out";
v0x5e485d1bf700_0 .net "a", 31 0, v0x5e485d2e03d0_0;  1 drivers
v0x5e485d2e0070_0 .net "b", 31 0, v0x5e485d2e0870_0;  1 drivers
v0x5e485d2e0150_0 .var "out", 31 0;
v0x5e485d2e0240_0 .net "sel", 3 0, v0x5e485d2e0bc0_0;  1 drivers
E_0x5e485d1bff40 .event anyedge, v0x5e485d2e0240_0, v0x5e485d1bf700_0, v0x5e485d2e0070_0;
    .scope S_0x5e485d1bf490;
T_0 ;
    %wait E_0x5e485d1bff40;
    %load/vec4 v0x5e485d2e0240_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 4;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 4;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 4;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 4;
    %cmp/u;
    %jmp/1 T_0.3, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 4;
    %cmp/u;
    %jmp/1 T_0.4, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 4;
    %cmp/u;
    %jmp/1 T_0.5, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 4;
    %cmp/u;
    %jmp/1 T_0.6, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 4;
    %cmp/u;
    %jmp/1 T_0.7, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 4;
    %cmp/u;
    %jmp/1 T_0.8, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 4;
    %cmp/u;
    %jmp/1 T_0.9, 6;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.0 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %add;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.1 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %sub;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.2 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %xor;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.3 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %or;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.4 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %and;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.5 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %parti/s 5, 0, 2;
    %ix/vec4 4;
    %shiftl 4;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.6 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %parti/s 5, 0, 2;
    %ix/vec4 4;
    %shiftr 4;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.7 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %parti/s 5, 0, 2;
    %ix/vec4 4;
    %shiftr/s 4;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.8 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %cmp/s;
    %flag_mov 8, 5;
    %jmp/0 T_0.12, 8;
    %pushi/vec4 1, 0, 32;
    %jmp/1 T_0.13, 8;
T_0.12 ; End of true expr.
    %pushi/vec4 0, 0, 32;
    %jmp/0 T_0.13, 8;
 ; End of false expr.
    %blend;
T_0.13;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.9 ;
    %load/vec4 v0x5e485d1bf700_0;
    %load/vec4 v0x5e485d2e0070_0;
    %cmp/u;
    %flag_mov 8, 5;
    %jmp/0 T_0.14, 8;
    %pushi/vec4 1, 0, 32;
    %jmp/1 T_0.15, 8;
T_0.14 ; End of true expr.
    %pushi/vec4 0, 0, 32;
    %jmp/0 T_0.15, 8;
 ; End of false expr.
    %blend;
T_0.15;
    %store/vec4 v0x5e485d2e0150_0, 0, 32;
    %jmp T_0.11;
T_0.11 ;
    %pop/vec4 1;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x5e485d1fc560;
T_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0570_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e04b0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e1610_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e1530_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e1450_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e1370_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0f10_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0e30_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e10d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0ff0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e17d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e16f0_0, 0, 32;
    %end;
    .thread T_1, $init;
    .scope S_0x5e485d1fc560;
T_2 ;
    %vpi_call/w 3 33 "$dumpfile", "alu_tb.vcd" {0 0 0};
    %vpi_call/w 3 34 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x5e485d1fc560 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 5, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 39 "$display", "a=%d, b=%d, a+b=%d", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 15, 0, 32;
    %jmp/0xz  T_2.0, 4;
    %vpi_call/w 3 41 "$display", "PASS: Basic ADD" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0570_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0570_0, 0, 32;
    %jmp T_2.1;
T_2.0 ;
    %vpi_call/w 3 44 "$display", "FAIL: Basic ADD" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e04b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e04b0_0, 0, 32;
T_2.1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 50 "$display", "a=%d, b=%d, a+b=%d", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.2, 4;
    %vpi_call/w 3 52 "$display", "PASS: Zero ADD" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0570_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0570_0, 0, 32;
    %jmp T_2.3;
T_2.2 ;
    %vpi_call/w 3 55 "$display", "FAIL: Zero ADD" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e04b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e04b0_0, 0, 32;
T_2.3 ;
    %pushi/vec4 2147483647, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 61 "$display", "a=%d, b=%d, a+b=%d", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2147483648, 0, 32;
    %jmp/0xz  T_2.4, 4;
    %vpi_call/w 3 63 "$display", "PASS: Overflow (Postive) ADD" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0570_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0570_0, 0, 32;
    %jmp T_2.5;
T_2.4 ;
    %vpi_call/w 3 66 "$display", "FAIL: Overflow (Postive) ADD" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e04b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e04b0_0, 0, 32;
T_2.5 ;
    %pushi/vec4 2147483648, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %load/vec4 v0x5e485d2e0870_0;
    %load/vec4 v0x5e485d2e0ad0_0;
    %vpi_call/w 3 72 "$display", "a=%d, b=%d, a+b=%d", S<2,vec4,s32>, S<1,vec4,s32>, S<0,vec4,s32> {3 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2147483647, 0, 32;
    %jmp/0xz  T_2.6, 4;
    %vpi_call/w 3 74 "$display", "PASS: Overflow (Negative) ADD" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0570_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0570_0, 0, 32;
    %jmp T_2.7;
T_2.6 ;
    %vpi_call/w 3 77 "$display", "FAIL: Overflow (Negative) ADD" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e04b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e04b0_0, 0, 32;
T_2.7 ;
    %pushi/vec4 2032, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 85 "$display", "a=%d, b=%d, a-b=%d", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2000, 0, 32;
    %jmp/0xz  T_2.8, 4;
    %vpi_call/w 3 87 "$display", "PASS: Basic SUB" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1610_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1610_0, 0, 32;
    %jmp T_2.9;
T_2.8 ;
    %vpi_call/w 3 90 "$display", "FAIL: Basic SUB" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1530_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1530_0, 0, 32;
T_2.9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 96 "$display", "a=%d, b=%d, a-b=%d", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.10, 4;
    %vpi_call/w 3 98 "$display", "PASS: Zero SUB" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1610_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1610_0, 0, 32;
    %jmp T_2.11;
T_2.10 ;
    %vpi_call/w 3 101 "$display", "FAIL: Zero SUB" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1530_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1530_0, 0, 32;
T_2.11 ;
    %pushi/vec4 2147483648, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %load/vec4 v0x5e485d2e0870_0;
    %load/vec4 v0x5e485d2e0ad0_0;
    %vpi_call/w 3 107 "$display", "a=%d, b=%d, a-b=%d", S<2,vec4,s32>, S<1,vec4,s32>, S<0,vec4,s32> {3 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2147483647, 0, 32;
    %jmp/0xz  T_2.12, 4;
    %vpi_call/w 3 109 "$display", "PASS: Overflow (Postive) SUB" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1610_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1610_0, 0, 32;
    %jmp T_2.13;
T_2.12 ;
    %vpi_call/w 3 112 "$display", "FAIL: Overflow (Positive) SUB" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1530_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1530_0, 0, 32;
T_2.13 ;
    %pushi/vec4 2147483647, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %load/vec4 v0x5e485d2e0870_0;
    %load/vec4 v0x5e485d2e0ad0_0;
    %vpi_call/w 3 118 "$display", "a=%d, b=%d, a-b=%d", S<2,vec4,s32>, S<1,vec4,s32>, S<0,vec4,s32> {3 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2147483648, 0, 32;
    %jmp/0xz  T_2.14, 4;
    %vpi_call/w 3 120 "$display", "PASS: Overflow (Negative) SUB" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1610_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1610_0, 0, 32;
    %jmp T_2.15;
T_2.14 ;
    %vpi_call/w 3 123 "$display", "FAIL: Overflow (Negative) SUB" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1530_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1530_0, 0, 32;
T_2.15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 131 "$display", "a=%b, b=%b, a^b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.16, 4;
    %vpi_call/w 3 133 "$display", "PASS: (0, 0) XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %jmp T_2.17;
T_2.16 ;
    %vpi_call/w 3 136 "$display", "FAIL: (0, 0) XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e18b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
T_2.17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 142 "$display", "a=%b, b=%b, a^b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.18, 4;
    %vpi_call/w 3 144 "$display", "PASS: (0, 1) XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %jmp T_2.19;
T_2.18 ;
    %vpi_call/w 3 147 "$display", "FAIL: (0, 1) XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e18b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
T_2.19 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 153 "$display", "a=%b, b=%b, a^b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.20, 4;
    %vpi_call/w 3 155 "$display", "PASS: (1, 0) XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %jmp T_2.21;
T_2.20 ;
    %vpi_call/w 3 158 "$display", "FAIL: (1, 0) XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e18b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
T_2.21 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 164 "$display", "a=%b, b=%b, a^b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.22, 4;
    %vpi_call/w 3 166 "$display", "PASS: (1, 1) XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %jmp T_2.23;
T_2.22 ;
    %vpi_call/w 3 169 "$display", "FAIL: (1, 1) XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e18b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
T_2.23 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 175 "$display", "a=%b, b=%b, a^b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4294967295, 0, 32;
    %jmp/0xz  T_2.24, 4;
    %vpi_call/w 3 177 "$display", "PASS: All 0's and all 1's XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %jmp T_2.25;
T_2.24 ;
    %vpi_call/w 3 180 "$display", "FAIL: All 0's and all 1's XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e18b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
T_2.25 ;
    %pushi/vec4 2863311530, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1431655765, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 186 "$display", "a=%b, b=%b, a^b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4294967295, 0, 32;
    %jmp/0xz  T_2.26, 4;
    %vpi_call/w 3 188 "$display", "PASS: Mixed bit pattern XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %jmp T_2.27;
T_2.26 ;
    %vpi_call/w 3 191 "$display", "FAIL: Mixed bit pattern XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e18b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
T_2.27 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 197 "$display", "a=%b, b=%b, a^b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2779096485, 0, 32;
    %jmp/0xz  T_2.28, 4;
    %vpi_call/w 3 199 "$display", "PASS: Identity property XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %jmp T_2.29;
T_2.28 ;
    %vpi_call/w 3 202 "$display", "FAIL: Identity property XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e18b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
T_2.29 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 208 "$display", "a=%b, b=%b, a^b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1515870810, 0, 32;
    %jmp/0xz  T_2.30, 4;
    %vpi_call/w 3 210 "$display", "PASS: Complement property XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1990_0, 0, 32;
    %jmp T_2.31;
T_2.30 ;
    %vpi_call/w 3 213 "$display", "FAIL: Complement property XOR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e18b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e18b0_0, 0, 32;
T_2.31 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 221 "$display", "a=%b, b=%b, a|b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.32, 4;
    %vpi_call/w 3 223 "$display", "PASS: (0, 0) OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e09f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %jmp T_2.33;
T_2.32 ;
    %vpi_call/w 3 226 "$display", "FAIL: (0, 0) OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
T_2.33 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 232 "$display", "a=%b, b=%b, a|b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.34, 4;
    %vpi_call/w 3 234 "$display", "PASS: (0, 1) OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e09f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %jmp T_2.35;
T_2.34 ;
    %vpi_call/w 3 237 "$display", "FAIL: (0, 1) OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
T_2.35 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 243 "$display", "a=%b, b=%b, a|b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.36, 4;
    %vpi_call/w 3 245 "$display", "PASS: (1, 0) OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e09f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %jmp T_2.37;
T_2.36 ;
    %vpi_call/w 3 248 "$display", "FAIL: (1, 0) OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
T_2.37 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 254 "$display", "a=%b, b=%b, a|b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.38, 4;
    %vpi_call/w 3 256 "$display", "PASS: (1, 1) OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e09f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %jmp T_2.39;
T_2.38 ;
    %vpi_call/w 3 259 "$display", "FAIL: (1, 1) OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
T_2.39 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 265 "$display", "a=%h, b=%h, a|b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4294967295, 0, 32;
    %jmp/0xz  T_2.40, 4;
    %vpi_call/w 3 267 "$display", "PASS: All 0's and all 1's OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e09f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %jmp T_2.41;
T_2.40 ;
    %vpi_call/w 3 270 "$display", "FAIL: All 0's and all 1's OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
T_2.41 ;
    %pushi/vec4 2863311530, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1431655765, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 276 "$display", "a=%h, b=%h, a|b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4294967295, 0, 32;
    %jmp/0xz  T_2.42, 4;
    %vpi_call/w 3 278 "$display", "PASS: Mixed bit pattern OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e09f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %jmp T_2.43;
T_2.42 ;
    %vpi_call/w 3 281 "$display", "FAIL: Mixed bit pattern OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
T_2.43 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 287 "$display", "a=%h, b=%h, a|b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2779096485, 0, 32;
    %jmp/0xz  T_2.44, 4;
    %vpi_call/w 3 289 "$display", "PASS: Identity property OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e09f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %jmp T_2.45;
T_2.44 ;
    %vpi_call/w 3 292 "$display", "FAIL: Identity property OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
T_2.45 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 298 "$display", "a=%h, b=%h, a|b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4294967295, 0, 32;
    %jmp/0xz  T_2.46, 4;
    %vpi_call/w 3 300 "$display", "PASS: Domination property OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e09f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e09f0_0, 0, 32;
    %jmp T_2.47;
T_2.46 ;
    %vpi_call/w 3 303 "$display", "FAIL: Domination property OR" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0930_0, 0, 32;
T_2.47 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 311 "$display", "a=%b, b=%b, a&b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.48, 4;
    %vpi_call/w 3 313 "$display", "PASS: (0, 0) AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %jmp T_2.49;
T_2.48 ;
    %vpi_call/w 3 316 "$display", "FAIL: (0, 0) AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
T_2.49 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 322 "$display", "a=%b, b=%b, a&b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.50, 4;
    %vpi_call/w 3 324 "$display", "PASS: (0, 1) AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %jmp T_2.51;
T_2.50 ;
    %vpi_call/w 3 327 "$display", "FAIL: (0, 1) AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
T_2.51 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 333 "$display", "a=%b, b=%b, a&b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.52, 4;
    %vpi_call/w 3 335 "$display", "PASS: (1, 0) AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %jmp T_2.53;
T_2.52 ;
    %vpi_call/w 3 338 "$display", "FAIL: (1, 0) AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
T_2.53 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 344 "$display", "a=%b, b=%b, a&b=%b", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.54, 4;
    %vpi_call/w 3 346 "$display", "PASS: (1, 1) AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %jmp T_2.55;
T_2.54 ;
    %vpi_call/w 3 349 "$display", "FAIL: (1, 1) AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
T_2.55 ;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 355 "$display", "a=%h, b=%h, a&b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4294967295, 0, 32;
    %jmp/0xz  T_2.56, 4;
    %vpi_call/w 3 357 "$display", "PASS: All 1's and all 1's AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %jmp T_2.57;
T_2.56 ;
    %vpi_call/w 3 360 "$display", "FAIL: All 1's and all 1's AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
T_2.57 ;
    %pushi/vec4 2863311530, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1431655765, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 366 "$display", "a=%h, b=%h, a&b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.58, 4;
    %vpi_call/w 3 368 "$display", "PASS: Mixed bit pattern AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %jmp T_2.59;
T_2.58 ;
    %vpi_call/w 3 371 "$display", "FAIL: Mixed bit pattern AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
T_2.59 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 377 "$display", "a=%h, b=%h, a&b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.60, 4;
    %vpi_call/w 3 379 "$display", "PASS: Domination property AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %jmp T_2.61;
T_2.60 ;
    %vpi_call/w 3 382 "$display", "FAIL: Domination property AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
T_2.61 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 388 "$display", "a=%h, b=%h, a&b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2779096485, 0, 32;
    %jmp/0xz  T_2.62, 4;
    %vpi_call/w 3 390 "$display", "PASS: Identity property AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0740_0, 0, 32;
    %jmp T_2.63;
T_2.62 ;
    %vpi_call/w 3 393 "$display", "FAIL: Identity property AND" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0660_0, 0, 32;
T_2.63 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 403 "$display", "a=%h, b=%d, a<<b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2, 0, 32;
    %jmp/0xz  T_2.64, 4;
    %vpi_call/w 3 405 "$display", "PASS: Shift left by 1" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %jmp T_2.65;
T_2.64 ;
    %vpi_call/w 3 408 "$display", "FAIL: Shift left by 1" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0c90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
T_2.65 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 414 "$display", "a=%h, b=%d, a<<b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 16, 0, 32;
    %jmp/0xz  T_2.66, 4;
    %vpi_call/w 3 416 "$display", "PASS: Shift left by 4" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %jmp T_2.67;
T_2.66 ;
    %vpi_call/w 3 419 "$display", "FAIL: Shift left by 4" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0c90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
T_2.67 ;
    %pushi/vec4 3855, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 8, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 425 "$display", "a=%h, b=%d, a<<b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 986880, 0, 32;
    %jmp/0xz  T_2.68, 4;
    %vpi_call/w 3 427 "$display", "PASS: Multiple bits shift" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %jmp T_2.69;
T_2.68 ;
    %vpi_call/w 3 430 "$display", "FAIL: Multiple bits shift" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0c90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
T_2.69 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 436 "$display", "a=%h, b=%d, a<<b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2779096485, 0, 32;
    %jmp/0xz  T_2.70, 4;
    %vpi_call/w 3 438 "$display", "PASS: Shift left by 0" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %jmp T_2.71;
T_2.70 ;
    %vpi_call/w 3 441 "$display", "FAIL: Shift left by 0" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0c90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
T_2.71 ;
    %pushi/vec4 2147483649, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 447 "$display", "a=%h, b=%d, a<<b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2, 0, 32;
    %jmp/0xz  T_2.72, 4;
    %vpi_call/w 3 449 "$display", "PASS: Shift with overflow" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %jmp T_2.73;
T_2.72 ;
    %vpi_call/w 3 452 "$display", "FAIL: Shift with overflow" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0c90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
T_2.73 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 31, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 458 "$display", "a=%h, b=%d, a<<b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2147483648, 0, 32;
    %jmp/0xz  T_2.74, 4;
    %vpi_call/w 3 460 "$display", "PASS: Maximum shift (31 bits)" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %jmp T_2.75;
T_2.74 ;
    %vpi_call/w 3 463 "$display", "FAIL: Maximum shift (31 bits)" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0c90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
T_2.75 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 469 "$display", "a=%h, b=%d, a<<b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.76, 4;
    %vpi_call/w 3 471 "$display", "PASS: Shift beyond word size" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %jmp T_2.77;
T_2.76 ;
    %vpi_call/w 3 474 "$display", "FAIL: Shift beyond word size" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0c90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
T_2.77 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 36, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 480 "$display", "a=%h, b=%d, a<<b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 16, 0, 32;
    %jmp/0xz  T_2.78, 4;
    %vpi_call/w 3 482 "$display", "PASS: Shift by value > 32" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0d50_0, 0, 32;
    %jmp T_2.79;
T_2.78 ;
    %vpi_call/w 3 485 "$display", "FAIL: Shift by value > 32" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0c90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0c90_0, 0, 32;
T_2.79 ;
    %pushi/vec4 16, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 495 "$display", "a=%h, b=%d, a>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 8, 0, 32;
    %jmp/0xz  T_2.80, 4;
    %vpi_call/w 3 497 "$display", "PASS: SRL by 1" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1450_0, 0, 32;
    %jmp T_2.81;
T_2.80 ;
    %vpi_call/w 3 500 "$display", "FAIL: SRL by 1" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1370_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1370_0, 0, 32;
T_2.81 ;
    %pushi/vec4 16, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 506 "$display", "a=%h, b=%d, a>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.82, 4;
    %vpi_call/w 3 508 "$display", "PASS: SRL by 4" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1450_0, 0, 32;
    %jmp T_2.83;
T_2.82 ;
    %vpi_call/w 3 511 "$display", "FAIL: SRL by 4" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1370_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1370_0, 0, 32;
T_2.83 ;
    %pushi/vec4 2147483648, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 517 "$display", "a=%h, b=%d, a>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 134217728, 0, 32;
    %jmp/0xz  T_2.84, 4;
    %vpi_call/w 3 519 "$display", "PASS: SRL high bit" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1450_0, 0, 32;
    %jmp T_2.85;
T_2.84 ;
    %vpi_call/w 3 522 "$display", "FAIL: SRL high bit" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1370_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1370_0, 0, 32;
T_2.85 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 528 "$display", "a=%h, b=%d, a>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2779096485, 0, 32;
    %jmp/0xz  T_2.86, 4;
    %vpi_call/w 3 530 "$display", "PASS: SRL by 0" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1450_0, 0, 32;
    %jmp T_2.87;
T_2.86 ;
    %vpi_call/w 3 533 "$display", "FAIL: SRL by 0" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1370_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1370_0, 0, 32;
T_2.87 ;
    %pushi/vec4 2147483648, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 31, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 539 "$display", "a=%h, b=%d, a>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.88, 4;
    %vpi_call/w 3 541 "$display", "PASS: SRL maximum (31 bits)" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1450_0, 0, 32;
    %jmp T_2.89;
T_2.88 ;
    %vpi_call/w 3 544 "$display", "FAIL: SRL maximum (31 bits)" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1370_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1370_0, 0, 32;
T_2.89 ;
    %pushi/vec4 305419896, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 36, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 550 "$display", "a=%h, b=%d, a>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 19088743, 0, 32;
    %jmp/0xz  T_2.90, 4;
    %vpi_call/w 3 552 "$display", "PASS: SRL with b > 32" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1450_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1450_0, 0, 32;
    %jmp T_2.91;
T_2.90 ;
    %vpi_call/w 3 555 "$display", "FAIL: SRL with b > 32" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1370_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1370_0, 0, 32;
T_2.91 ;
    %pushi/vec4 16, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 565 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 8, 0, 32;
    %jmp/0xz  T_2.92, 4;
    %vpi_call/w 3 567 "$display", "PASS: SRA positive by 1" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.93;
T_2.92 ;
    %vpi_call/w 3 570 "$display", "FAIL: SRA positive by 1" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.93 ;
    %pushi/vec4 2147483664, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 576 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 3221225480, 0, 32;
    %jmp/0xz  T_2.94, 4;
    %vpi_call/w 3 578 "$display", "PASS: SRA negative by 1" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.95;
T_2.94 ;
    %vpi_call/w 3 581 "$display", "FAIL: SRA negative by 1" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.95 ;
    %pushi/vec4 16, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 587 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.96, 4;
    %vpi_call/w 3 589 "$display", "PASS: SRA positive by 4" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.97;
T_2.96 ;
    %vpi_call/w 3 592 "$display", "FAIL: SRA positive by 4" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.97 ;
    %pushi/vec4 2147483904, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 8, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 598 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4286578689, 0, 32;
    %jmp/0xz  T_2.98, 4;
    %vpi_call/w 3 600 "$display", "PASS: SRA negative by 8" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.99;
T_2.98 ;
    %vpi_call/w 3 603 "$display", "FAIL: SRA negative by 8" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.99 ;
    %pushi/vec4 2779096485, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 609 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 2779096485, 0, 32;
    %jmp/0xz  T_2.100, 4;
    %vpi_call/w 3 611 "$display", "PASS: SRA by 0" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.101;
T_2.100 ;
    %vpi_call/w 3 614 "$display", "FAIL: SRA by 0" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.101 ;
    %pushi/vec4 2147483647, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 31, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 620 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.102, 4;
    %vpi_call/w 3 622 "$display", "PASS: SRA positive all bits" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.103;
T_2.102 ;
    %vpi_call/w 3 625 "$display", "FAIL: SRA positive all bits" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.103 ;
    %pushi/vec4 2147483649, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 31, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 631 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4294967295, 0, 32;
    %jmp/0xz  T_2.104, 4;
    %vpi_call/w 3 633 "$display", "PASS: SRA negative all bits" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.105;
T_2.104 ;
    %vpi_call/w 3 636 "$display", "FAIL: SRA negative all bits" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.105 ;
    %pushi/vec4 305419896, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 642 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 305419896, 0, 32;
    %jmp/0xz  T_2.106, 4;
    %vpi_call/w 3 644 "$display", "PASS: SRA beyond word size" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.107;
T_2.106 ;
    %vpi_call/w 3 647 "$display", "FAIL: SRA beyond word size" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.107 ;
    %pushi/vec4 305419896, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 36, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 653 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 19088743, 0, 32;
    %jmp/0xz  T_2.108, 4;
    %vpi_call/w 3 655 "$display", "PASS: SRA by value > 32" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.109;
T_2.108 ;
    %vpi_call/w 3 658 "$display", "FAIL: SRA by value > 32" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.109 ;
    %pushi/vec4 2147483648, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 16, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 664 "$display", "a=%h, b=%d, a>>>b=%h", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 4294934528, 0, 32;
    %jmp/0xz  T_2.110, 4;
    %vpi_call/w 3 666 "$display", "PASS: SRA negative max value" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e1290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e1290_0, 0, 32;
    %jmp T_2.111;
T_2.110 ;
    %vpi_call/w 3 669 "$display", "FAIL: SRA negative max value" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e11b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e11b0_0, 0, 32;
T_2.111 ;
    %pushi/vec4 5, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %load/vec4 v0x5e485d2e0870_0;
    %vpi_call/w 3 679 "$display", "a=%d, b=%d, a<b=%d", S<1,vec4,s32>, S<0,vec4,s32>, v0x5e485d2e0ad0_0 {2 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.112, 4;
    %vpi_call/w 3 681 "$display", "PASS: SLT basic less than" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0f10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0f10_0, 0, 32;
    %jmp T_2.113;
T_2.112 ;
    %vpi_call/w 3 684 "$display", "FAIL: SLT basic less than" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0e30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0e30_0, 0, 32;
T_2.113 ;
    %pushi/vec4 15, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %load/vec4 v0x5e485d2e0870_0;
    %vpi_call/w 3 690 "$display", "a=%d, b=%d, a<b=%d", S<1,vec4,s32>, S<0,vec4,s32>, v0x5e485d2e0ad0_0 {2 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.114, 4;
    %vpi_call/w 3 692 "$display", "PASS: SLT basic greater than" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0f10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0f10_0, 0, 32;
    %jmp T_2.115;
T_2.114 ;
    %vpi_call/w 3 695 "$display", "FAIL: SLT basic greater than" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0e30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0e30_0, 0, 32;
T_2.115 ;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %load/vec4 v0x5e485d2e0870_0;
    %vpi_call/w 3 701 "$display", "a=%d, b=%d, a<b=%d", S<1,vec4,s32>, S<0,vec4,s32>, v0x5e485d2e0ad0_0 {2 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.116, 4;
    %vpi_call/w 3 703 "$display", "PASS: SLT equal values" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0f10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0f10_0, 0, 32;
    %jmp T_2.117;
T_2.116 ;
    %vpi_call/w 3 706 "$display", "FAIL: SLT equal values" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0e30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0e30_0, 0, 32;
T_2.117 ;
    %pushi/vec4 4294967291, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %load/vec4 v0x5e485d2e0870_0;
    %vpi_call/w 3 712 "$display", "a=%d, b=%d, a<b=%d", S<1,vec4,s32>, S<0,vec4,s32>, v0x5e485d2e0ad0_0 {2 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.118, 4;
    %vpi_call/w 3 714 "$display", "PASS: SLT negative < positive" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0f10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0f10_0, 0, 32;
    %jmp T_2.119;
T_2.118 ;
    %vpi_call/w 3 717 "$display", "FAIL: SLT negative < positive" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0e30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0e30_0, 0, 32;
T_2.119 ;
    %pushi/vec4 4294967281, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967291, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %load/vec4 v0x5e485d2e0870_0;
    %vpi_call/w 3 723 "$display", "a=%d, b=%d, a<b=%d", S<1,vec4,s32>, S<0,vec4,s32>, v0x5e485d2e0ad0_0 {2 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.120, 4;
    %vpi_call/w 3 725 "$display", "PASS: SLT both negative" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0f10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0f10_0, 0, 32;
    %jmp T_2.121;
T_2.120 ;
    %vpi_call/w 3 728 "$display", "FAIL: SLT both negative" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0e30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0e30_0, 0, 32;
T_2.121 ;
    %pushi/vec4 5, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 738 "$display", "a=%d, b=%d, a<b=%d (unsigned)", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.122, 4;
    %vpi_call/w 3 740 "$display", "PASS: SLTU basic less than" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e10d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e10d0_0, 0, 32;
    %jmp T_2.123;
T_2.122 ;
    %vpi_call/w 3 743 "$display", "FAIL: SLTU basic less than" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0ff0_0, 0, 32;
T_2.123 ;
    %pushi/vec4 15, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 749 "$display", "a=%d, b=%d, a<b=%d (unsigned)", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.124, 4;
    %vpi_call/w 3 751 "$display", "PASS: SLTU basic greater than" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e10d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e10d0_0, 0, 32;
    %jmp T_2.125;
T_2.124 ;
    %vpi_call/w 3 754 "$display", "FAIL: SLTU basic greater than" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0ff0_0, 0, 32;
T_2.125 ;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %vpi_call/w 3 760 "$display", "a=%d, b=%d, a<b=%d (unsigned)", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {0 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.126, 4;
    %vpi_call/w 3 762 "$display", "PASS: SLTU equal values" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e10d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e10d0_0, 0, 32;
    %jmp T_2.127;
T_2.126 ;
    %vpi_call/w 3 765 "$display", "FAIL: SLTU equal values" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0ff0_0, 0, 32;
T_2.127 ;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e03d0_0;
    %vpi_call/w 3 771 "$display", "a=%h (%d signed), b=%d, a<b=%d (unsigned)", v0x5e485d2e03d0_0, S<0,vec4,s32>, v0x5e485d2e0870_0, v0x5e485d2e0ad0_0 {1 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.128, 4;
    %vpi_call/w 3 773 "$display", "PASS: SLTU negative as unsigned" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e10d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e10d0_0, 0, 32;
    %jmp T_2.129;
T_2.128 ;
    %vpi_call/w 3 776 "$display", "FAIL: SLTU negative as unsigned" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0ff0_0, 0, 32;
T_2.129 ;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0x5e485d2e03d0_0, 0, 32;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5e485d2e0870_0, 0, 32;
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x5e485d2e0bc0_0, 0, 4;
    %delay 10, 0;
    %load/vec4 v0x5e485d2e0870_0;
    %vpi_call/w 3 782 "$display", "a=%d, b=%h (%d signed), a<b=%d (unsigned)", v0x5e485d2e03d0_0, v0x5e485d2e0870_0, S<0,vec4,s32>, v0x5e485d2e0ad0_0 {1 0 0};
    %load/vec4 v0x5e485d2e0ad0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.130, 4;
    %vpi_call/w 3 784 "$display", "PASS: SLTU unsigned comparison" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e10d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e10d0_0, 0, 32;
    %jmp T_2.131;
T_2.130 ;
    %vpi_call/w 3 787 "$display", "FAIL: SLTU unsigned comparison" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5e485d2e0ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5e485d2e0ff0_0, 0, 32;
T_2.131 ;
    %load/vec4 v0x5e485d2e0570_0;
    %load/vec4 v0x5e485d2e1610_0;
    %add;
    %load/vec4 v0x5e485d2e1990_0;
    %add;
    %load/vec4 v0x5e485d2e09f0_0;
    %add;
    %load/vec4 v0x5e485d2e0740_0;
    %add;
    %load/vec4 v0x5e485d2e0d50_0;
    %add;
    %load/vec4 v0x5e485d2e1450_0;
    %add;
    %load/vec4 v0x5e485d2e1290_0;
    %add;
    %load/vec4 v0x5e485d2e0f10_0;
    %add;
    %load/vec4 v0x5e485d2e10d0_0;
    %add;
    %store/vec4 v0x5e485d2e17d0_0, 0, 32;
    %load/vec4 v0x5e485d2e04b0_0;
    %load/vec4 v0x5e485d2e1530_0;
    %add;
    %load/vec4 v0x5e485d2e18b0_0;
    %add;
    %load/vec4 v0x5e485d2e0930_0;
    %add;
    %load/vec4 v0x5e485d2e0660_0;
    %add;
    %load/vec4 v0x5e485d2e0c90_0;
    %add;
    %load/vec4 v0x5e485d2e1370_0;
    %add;
    %load/vec4 v0x5e485d2e11b0_0;
    %add;
    %load/vec4 v0x5e485d2e0e30_0;
    %add;
    %load/vec4 v0x5e485d2e0ff0_0;
    %add;
    %store/vec4 v0x5e485d2e16f0_0, 0, 32;
    %vpi_call/w 3 795 "$display", "\012----- TEST SUMMARY -----" {0 0 0};
    %vpi_call/w 3 796 "$display", "ADD: %d passed, %d failed", v0x5e485d2e0570_0, v0x5e485d2e04b0_0 {0 0 0};
    %vpi_call/w 3 797 "$display", "SUB: %d passed, %d failed", v0x5e485d2e1610_0, v0x5e485d2e1530_0 {0 0 0};
    %vpi_call/w 3 798 "$display", "XOR: %d passed, %d failed", v0x5e485d2e1990_0, v0x5e485d2e18b0_0 {0 0 0};
    %vpi_call/w 3 799 "$display", "OR: %d passed, %d failed", v0x5e485d2e09f0_0, v0x5e485d2e0930_0 {0 0 0};
    %vpi_call/w 3 800 "$display", "AND: %d passed, %d failed", v0x5e485d2e0740_0, v0x5e485d2e0660_0 {0 0 0};
    %vpi_call/w 3 801 "$display", "SLL: %d passed, %d failed", v0x5e485d2e0d50_0, v0x5e485d2e0c90_0 {0 0 0};
    %vpi_call/w 3 802 "$display", "SRL: %d passed, %d failed", v0x5e485d2e1450_0, v0x5e485d2e1370_0 {0 0 0};
    %vpi_call/w 3 803 "$display", "SRA: %d passed, %d failed", v0x5e485d2e1290_0, v0x5e485d2e11b0_0 {0 0 0};
    %vpi_call/w 3 804 "$display", "SLT: %d passed, %d failed", v0x5e485d2e0f10_0, v0x5e485d2e0e30_0 {0 0 0};
    %vpi_call/w 3 805 "$display", "SLTU: %d passed, %d failed", v0x5e485d2e10d0_0, v0x5e485d2e0ff0_0 {0 0 0};
    %vpi_call/w 3 806 "$display", "SUMMARY: %d passed, %d failed", v0x5e485d2e17d0_0, v0x5e485d2e16f0_0 {0 0 0};
    %vpi_call/w 3 808 "$finish" {0 0 0};
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "alu_tb.sv";
    "alu.v";
